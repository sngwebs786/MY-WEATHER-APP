{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nashra\\\\REACT\\\\WeatherApp\\\\myapp\\\\src\\\\WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport cloudy from './img/cloudy.jpg';\nimport TextField from '@mui/material/TextField';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherApp = () => {\n  _s();\n\n  //month\n  const month = new Array();\n  month[0] = \"January\";\n  month[1] = \"February\";\n  month[2] = \"March\";\n  month[3] = \"April\";\n  month[4] = \"May\";\n  month[5] = \"June\";\n  month[6] = \"July\";\n  month[7] = \"August\";\n  month[8] = \"September\";\n  month[9] = \"October\";\n  month[10] = \"November\";\n  month[11] = \"December\"; //day\n\n  const day = new Array();\n  day[0] = \"Monday\";\n  day[1] = \"Tuesday\";\n  day[2] = \"Wednesday\";\n  day[3] = \"Thursday\";\n  day[4] = \"Friday\";\n  day[5] = \"Saturday\";\n  day[6] = \"Sunday\";\n  let today = new Date();\n  let name = month[today.getMonth()];\n  let dayName = day[today.getDay()];\n  var date = dayName + \", \" + name + \" \" + today.getDate() + \", \" + today.getFullYear();\n  var atm; //Api\n\n  const [cityData, setCityData] = useState();\n  const [city, setCity] = useState(\"Karachi\");\n  useEffect(() => {\n    const fetchApi = async () => {\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=ad9da9365f7fb965f86f40daa394fe46`;\n      const response = await fetch(url);\n      const resJson = await response.json();\n      setCityData(resJson.weather);\n      console.log(resJson.data);\n    };\n\n    fetchApi();\n  }, [city]);\n  return (\n    /*#__PURE__*/\n    // <div className=\"main-div\" style={{ background: `linear-gradient(rgba(255,255,255,.2), rgba(255,255,255,.2)), url(${cloudy})` }}>\n    //     <h1>My Weather App </h1>\n    //     <center>\n    //         <div className=\"myComponents\"   >\n    //             <TextField onChange={(e) => setCity(e.target.value)} className=\"input-field\" id=\"standard-basic\" label=\"Enter your country/city . . .\" variant=\"standard\" />\n    //             {!cityData ? (\n    //                 <p className=\"ErrorMsg\">Sorry! No data found</p>\n    //             ) : (\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: e => {\n          setCity(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this), city, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: cityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this) // <>\n    //     <p className=\"countryName\">{city}</p>\n    //     <p className=\"date\">{date}</p>\n    //     <h1 className=\"temp\">{cityData.temp} &deg; C</h1>\n    //     <p className=\"design\">---------------------</p>\n    //     {/* <h4 className=\"atmosphere\">{cityData.weather[0].main}</h4> */}\n    //     <h4>Feels like {cityData.feels_like}</h4>\n    //     <p>{cityData.temp_min} &deg;C / {cityData.temp_max}&deg;C </p>\n    // </>\n\n  );\n}; //                 </div>\n//             </center>\n//         </div>\n//     )\n// }\n\n\n_s(WeatherApp, \"ldGw7+8aYGS40mkePclXyXaRc6E=\");\n\n_c = WeatherApp;\nexport default WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["D:/Nashra/REACT/WeatherApp/myapp/src/WeatherApp.js"],"names":["React","cloudy","TextField","useState","useEffect","WeatherApp","month","Array","day","today","Date","name","getMonth","dayName","getDay","date","getDate","getFullYear","atm","cityData","setCityData","city","setCity","fetchApi","url","response","fetch","resJson","json","weather","console","log","data","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAdfqB,CAiBrB;;AACA,QAAME,GAAG,GAAG,IAAID,KAAJ,EAAZ;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,QAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,SAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,WAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,UAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,QAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,UAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,QAAT;AAEA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GAAGL,KAAK,CAACG,KAAK,CAACG,QAAN,EAAD,CAAhB;AACA,MAAIC,OAAO,GAAGL,GAAG,CAACC,KAAK,CAACK,MAAN,EAAD,CAAjB;AAEA,MAAIC,IAAI,GAAIF,OAAD,GAAY,IAAZ,GAAoBF,IAApB,GAA4B,GAA5B,GAAkCF,KAAK,CAACO,OAAN,EAAlC,GAAoD,IAApD,GAA2DP,KAAK,CAACQ,WAAN,EAAtE;AAGA,MAAIC,GAAJ,CAlCqB,CAoCrB;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,SAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAI,oDAAmDH,IAAK,sDAArE;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACCR,MAAAA,WAAW,CAACO,OAAO,CAACE,OAAT,CAAX;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,IAApB;AAEH,KAPD;;AASAT,IAAAA,QAAQ;AAGX,GAbQ,EAaN,CAACF,IAAD,CAbM,CAAT;AAkBA;AAAA;AAGI;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACgB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAGY,CAAD,IAAK;AAACX,UAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKd,IAFL,eAGI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbpB,CAkBoB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1BpB;AA6BiB,CAvFrB,C,CA0FA;AACA;AACA;AAEA;AACA;;;GA/FMd,U;;KAAAA,U;AAkGN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport cloudy from './img/cloudy.jpg';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nconst WeatherApp = () => {\r\n\r\n    //month\r\n    const month = new Array();\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n\r\n    //day\r\n    const day = new Array();\r\n    day[0] = \"Monday\"\r\n    day[1] = \"Tuesday\"\r\n    day[2] = \"Wednesday\"\r\n    day[3] = \"Thursday\"\r\n    day[4] = \"Friday\"\r\n    day[5] = \"Saturday\"\r\n    day[6] = \"Sunday\"\r\n\r\n    let today = new Date();\r\n    let name = month[today.getMonth()];\r\n    let dayName = day[today.getDay()];\r\n\r\n    var date = (dayName) + \", \" + (name) + \" \" + today.getDate() + \", \" + today.getFullYear();\r\n\r\n\r\n    var atm;\r\n\r\n    //Api\r\n    const [cityData, setCityData] = useState()\r\n    const [city, setCity] = useState(\"Karachi\")\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=ad9da9365f7fb965f86f40daa394fe46`\r\n            const response = await fetch(url)\r\n            const resJson = await response.json()\r\n             setCityData(resJson.weather)\r\n            console.log(resJson.data)\r\n\r\n        }\r\n\r\n        fetchApi()\r\n\r\n        \r\n    }, [city])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        // <div className=\"main-div\" style={{ background: `linear-gradient(rgba(255,255,255,.2), rgba(255,255,255,.2)), url(${cloudy})` }}>\r\n        //     <h1>My Weather App </h1>\r\n        //     <center>\r\n\r\n        //         <div className=\"myComponents\"   >\r\n        //             <TextField onChange={(e) => setCity(e.target.value)} className=\"input-field\" id=\"standard-basic\" label=\"Enter your country/city . . .\" variant=\"standard\" />\r\n\r\n        //             {!cityData ? (\r\n        //                 <p className=\"ErrorMsg\">Sorry! No data found</p>\r\n        //             ) : (\r\n                        <div>\r\n                            <input type='search' onChange={(e)=>{setCity(e.target.value)}} />\r\n                            {city}\r\n                            <h1>{cityData}</h1>\r\n                        </div>\r\n                        // <>\r\n                        //     <p className=\"countryName\">{city}</p>\r\n                        //     <p className=\"date\">{date}</p>\r\n                        //     <h1 className=\"temp\">{cityData.temp} &deg; C</h1>\r\n                        //     <p className=\"design\">---------------------</p>\r\n                        //     {/* <h4 className=\"atmosphere\">{cityData.weather[0].main}</h4> */}\r\n                        //     <h4>Feels like {cityData.feels_like}</h4>\r\n                        //     <p>{cityData.temp_min} &deg;C / {cityData.temp_max}&deg;C </p>\r\n                        // </>\r\n                    )\r\n\r\n                    }\r\n\r\n\r\n//                 </div>\r\n//             </center>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n\r\n\r\nexport default WeatherApp;\r\n"]},"metadata":{},"sourceType":"module"}